---
  name: e-commerce workflow 
  on:
    push:
      branches:
        - main
  env:
    IMAGE_TAG: "v1.1"


  jobs:
    unit-testing:
      name: Unit Testing
      runs-on: ubuntu-latest
      container: node:18
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Run Trivy vulnerability scanner in fs mode
          uses: aquasecurity/trivy-action@0.28.0
          with:
            scan-type: 'fs'
            scan-ref: '.'
            trivy-config: trivy.yaml

        - name: Cache NPM dependencies
          uses: actions/cache@v4
          with:
            path: ~/.npm
            key: '${{ runner.os }}-node-modules-${{ hashFiles(''package-lock.json'') }}'


        - name: Install Dependencies
          run: npm install

    docker:
      name: docker-build
      needs: unit-testing
      runs-on: ubuntu-latest
      steps:
        - name: checkout repo
          uses: actions/checkout@v4.2.2

        - name: DockerLogin
          uses: docker/login-action@v3.4.0
          with:
            username: ${{ vars.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

        - name: Build and push Docker images
          uses: docker/build-push-action@v6.18.0
          with:
            push: true
            tags: ${{ vars.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            context: .

        - name: Run Trivy vulnerability scanner
          uses: aquasecurity/trivy-action@0.28.0
          with:
            image-ref: 'docker.io/${{ vars.IMAGE_NAME }}:${{ env.IMAGE_TAG }}'
            format: 'table'
            exit-code: '1'
            ignore-unfixed: true
            vuln-type: 'os,library'
            severity: 'CRITICAL'
            
      
    k8s:
      name: k8s-image-update
      needs: docker
      runs-on: ubuntu-latest
      steps:
        - name: checkout repo
          uses: actions/checkout@v4.2.2 

        - name: Set up Git
          run: |
            git config --global user.name "github-ubuntu"
            git config --global user.email "swl@gmail.com"

        - name: Run manifest update script
          env:
            TARGET_REPO_TOKEN: ${{ secrets.TARGET_REPO_TOKEN }}

          run: |
           git clone https://soewailin:${TARGET_REPO_TOKEN}@github.com/soe-wai-lin/argo-e-commerce.git

           cd argo-e-commerce

           sed -i 's/cake-e-commerce:.*/cake-e-commerce:v1.1/g' deployment.yaml

           sed -i 's/replicas: .*/replicas: 5/g' deployment.yaml

           cat deployment.yaml

           git add .

           git commit -m "Update deployment manifest via GitHub Action"

           git push origin main 
      